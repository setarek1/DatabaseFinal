-- MySQL Script generated by MySQL Workbench
-- Mon Jan 29 09:27:52 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema projSchema
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema projSchema
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `projSchema` ;
USE `projSchema` ;

-- -----------------------------------------------------
-- Table `projSchema`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `projSchema`.`user` (
  `userID` INT NOT NULL,
  `userName` VARCHAR(45) NULL,
  `userPassword` VARCHAR(45) NULL,
  `userEmail` VARCHAR(45) NULL,
  PRIMARY KEY (`userID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `projSchema`.`wallet`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `projSchema`.`wallet` (
  `walletID` INT NOT NULL,
  `dollarBalance` FLOAT NULL,
  `tomanBalance` FLOAT NULL,
  `lireBalance` FLOAT NULL,
  `poundBalance` FLOAT NULL,
  `euroBalance` FLOAT NULL,
  `user_userID` INT NOT NULL,
  PRIMARY KEY (`walletID`),# `user_userID`),
  #INDEX `fk_wallet_user_idx` (`user_userID` ASC) VISIBLE,
  CONSTRAINT `fk_wallet_user`
    FOREIGN KEY (`user_userID`)
    REFERENCES `projSchema`.`user` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `projSchema`.`currencyMarket`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `projSchema`.`currencyMarket` (
  `currencyID` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `buyRate` INT NULL,
  `sellRate` INT NULL,
  PRIMARY KEY (`currencyID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `projSchema`.`transaction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `projSchema`.`transaction` (
  `transactionID` INT NOT NULL,
  `date` DATE NULL,
  `amount` FLOAT NULL,
  `user_sellerID` INT NOT NULL,
  `user_buyerID1` INT NOT NULL,
  `currency_fromID` INT NOT NULL,
  `currency_toID` INT NOT NULL,
  `amount2` FLOAT NULL,
  PRIMARY KEY (`transactionID`),# `user_sellerID`, `user_buyerID1`, `currency_fromID`, `currency_toID`),
  #INDEX `fk_transaction_user1_idx` (`user_sellerID` ASC) VISIBLE,
  #INDEX `fk_transaction_user2_idx` (`user_buyerID1` ASC) VISIBLE,
  #INDEX `fk_transaction_currency1_idx` (`currency_fromID` ASC) VISIBLE,
  #INDEX `fk_transaction_currency2_idx` (`currency_toID` ASC) VISIBLE,
  CONSTRAINT `fk_transaction_user1`
    FOREIGN KEY (`user_sellerID`)
    REFERENCES `projSchema`.`user` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_transaction_user2`
    FOREIGN KEY (`user_buyerID1`)
    REFERENCES `projSchema`.`user` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_transaction_currency1`
    FOREIGN KEY (`currency_fromID`)
    REFERENCES `projSchema`.`currencyMarket` (`currencyID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_transaction_currency2`
    FOREIGN KEY (`currency_toID`)
    REFERENCES `projSchema`.`currencyMarket` (`currencyID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

DROP TRIGGER IF EXISTS transaction_insert;
DELIMITER //
CREATE TRIGGER transaction_insert
BEFORE INSERT ON `transaction`
FOR EACH ROW 
BEGIN 
	DECLARE rate1, rate2 INT;
    SELECT buyRate INTO rate1 FROM currencyMarket WHERE currencyID = NEW.currency_fromID;
	SELECT buyRate INTO rate2 FROM currencyMarket WHERE currencyID = NEW.currency_toID;

	SET NEW.amount2 = NEW.amount * (rate2/rate1);
    UPDATE wallet
    SET
		dollarBalance;
    
END;
//
DELIMITER ;

-- DELETE FROM transaction;
-- DROP TABLE transaction, wallet, currencyMarket, user;
 -- INSERT INTO transaction(transactionID, date, amount, user_sellerID, user_buyerID1, currency_fromID, currency_toID) VALUES (0, '2001-01-01', 10.02, 0, 0, 1, 0);
 -- DELETE FROM transaction;
SELECT * FROM transaction;
SELECT * FROM wallet;

 -- INSERT INTO transaction(transactionID, amount) VALUES (0,1);

